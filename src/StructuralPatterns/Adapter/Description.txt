Описание:
Adapter — это структурный паттерн проектирования, который предназначен для того, чтобы два несовместимых интерфейса могли работать вместе. Его задача — преобразовывать интерфейс одного класса в интерфейс, который ожидает клиент. Adapter используется в ситуациях, когда система не может быть изменена, но её необходимо интегрировать с другими существующими системами.

Проблема:
Представьте, что у вас есть два компонента системы, которые не могут взаимодействовать друг с другом напрямую, потому что их интерфейсы не совпадают. Например, один компонент использует современный интерфейс, а другой — устаревший. Переписывание одного из компонентов слишком сложно или невозможно, так как это нарушит существующую архитектуру, или классы находятся в сторонней библиотеке. Это может создать проблему интеграции.

Как решает проблему:
Паттерн Adapter решает эту проблему, создавая специальный класс-обёртку (адаптер), который преобразует вызовы клиента в формат, понятный целевому классу. Клиент взаимодействует с адаптером через ожидаемый интерфейс, не зная о деталях преобразований. Адаптер берёт на себя всю работу по трансформации данных и вызовов.


Описание и проблема паттерна Adapter в контексте кода
Проблема в коде:
Допустим, у вас есть система, которая может воспроизводить только MP3-файлы через интерфейс MediaPlayer, но у вас появляется потребность поддерживать воспроизведение и других форматов, таких как VLC и MP4. Проблема в том, что классы для работы с этими форматами используют другой интерфейс (AdvancedMediaPlayer), несовместимый с тем, что использует клиент. Вы не можете изменить исходные классы (например, это сторонние библиотеки), и вам нужно сделать так, чтобы MediaPlayer мог работать с этими новыми форматами без изменения его интерфейса.

Как решает проблему:
Для решения этой проблемы паттерн Adapter вводит класс-обёртку MediaAdapter, который преобразует интерфейс AdvancedMediaPlayer в интерфейс, который поддерживает MediaPlayer. Таким образом, клиент (AudioPlayer) может работать с любыми форматами аудио (MP3, VLC, MP4) через единый интерфейс, не задумываясь о том, что на самом деле происходит внутри. Adapter берёт на себя задачу определения нужного класса для воспроизведения и вызывает соответствующие методы у AdvancedMediaPlayer.

Как это работает:
Каждый новый формат аудиофайла регистрируется в карте playerMap в классе MediaAdapter.
При запуске AudioPlayer, тип файла определяется по его расширению, а затем MediaAdapter подбирает соответствующий проигрыватель.
Если тип файла не поддерживается, система сообщает об этом, не нарушая принципов SOLID.

